
@mixin clouds-from-below {
  background-image: url(../bootstrap/images/clouds-upsidedown.svg);
  background-position: top center;
  background-repeat: repeat-x;  
  padding: baselineGridUnits(5) 0 0 0;
}

@mixin clouds-from-above {
  background-image: url(../bootstrap/images/clouds.svg);
  background-position: bottom center;
  background-repeat: repeat-x;  
  padding: 0 0 baselineGridUnits(5) 0;
}

@mixin clouds{
  background-image: url(../bootstrap/images/clouds.svg), url(../bootstrap/images/clouds-upsidedown.svg);
  background-position: bottom center, top center;
  background-repeat: repeat-x;  
  padding: baselineGridUnits(5) 0 baselineGridUnits(5) 0;
}

// This convention is used within bootstrap to differentiate between the sub-brands.
// It is expected that applications set the sub-brand on the HTML but not within the scss... 
// it is expected a different css is served for each sub-brand so consuming projects wouldn't 
// typcially need to include html.{sub-brand} in their css
//
// html.{sub-brand} -> body.{specific-page} -> styles
//
@mixin normal-section {
  background-color: $color-secondary-white;
  color: $color-brand-dark-blue;  

  a {
    color: $color-brand-pink;
  }
}

@mixin reversed-section {
  //rely on main for background-color (so clouds work)
  color: $color-brand-dark-blue;

  a {
    color: $color-brand-pink;
  }

  html.hirer & {
    color: $color-secondary-white;

    a {
      color: $color-brand-cyan-60;
    }
  }
}


html, body {
  height: 100%;
}

body {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}

main {
  background-color: $color-brand-cyan;
  @include clouds;

  flex: 1 1 auto; // flex-grow 1 (when header/footer flex-grow = 0 => full height main
  align-self: stretch;

  justify-content: flex-start;

  @include small-screen-up {
    padding-left: $gutter-width/2;
    padding-right: $gutter-width/2;
  }

  html.hirer & {
    background-color: $color-brand-dark-blue-80;
    color: $color-secondary-white;
  }
}

.content-container {
  flex: 0 1 100%;

  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-self: stretch;
}

@mixin card {
  padding-top: baselineGridUnits(1);
}

@mixin contents-positioning {
  margin: 0 $gutter-width/2;
  
  @include small-screen-up {  
    max-width: $large-screen-breakpoint;
    margin: 0 auto;
  }
}